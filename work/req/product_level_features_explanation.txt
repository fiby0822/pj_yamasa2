商品レベル特徴量の概要と狙い
================================

生成対象スクリプト: work/script/generate_features_product_level.py

本スクリプトは商品×日次の需要実績からリークを防ぎつつ逐次更新できる特徴量セットを構築し、`product_level_features_latest.parquet` などへ出力している。特徴量は「静的プロファイル」「状態に依存する統計量」「カレンダ要因」の3系統で構成され、マルチステップ予測時にも `FeatureState` がラグやローリング統計を更新する設計になっている。

1. 静的特徴量 (STATIC_FEATURES)
--------------------------------
- `material_idx`: 商品を一意に識別する整数ID。モデルにカテゴリ情報を伝える。
- `product_mean_f` / `product_std_f` / `product_median_f` / `product_min_f` / `product_max_f`: 過去全期間の代表値。基本的な需要水準とばらつきを把握し、スケールの差を学習させる。
- `volume_segment_f`: 累計出荷量が閾値 (`VOLUME_THRESHOLD`) を超えるかどうかのフラグ。高ボリュームSKUか低ボリュームSKUかを分け、後続の需要特性差 (例えば高頻度補充が必要なSKU) を捉える。

狙い: 商品固定のスケール・分布・ボリューム属性を把握し、他の動的特徴量が持つ情報を正規化・補強する。

2. 状態依存の時系列特徴量 (STATEFUL_FEATURES)
----------------------------------------------
### ラグ・移動統計
- `lag_1_f`〜`lag_28_f`: 直近1・2・3・7・14・28日の実績。需要の慣性や曜日/週次周期を直接組み込み、短期オートリグレッシブ性を捉える。
- `rolling_mean_{3,7,14,28}_f` / `rolling_min/max` / `rolling_std_{7,14,28}_f`: 異なる窓の移動平均・最小値・最大値・標準偏差。スムーズなトレンドと揺らぎを把握し、短期〜月次の水準変化を学習させる。
- `rolling_median_{7,14}_f`, `rolling_iqr_14_f`, `rolling_cv_14_f`, `peak_to_mean_ratio_14_f`: 外れ値耐性のある中心値、分散性、ピーク比率を計算。出荷の尖りやボラティリティを認識する。

狙い: 直近推移と階層的な平均・散らばりをモデルに供給し、滑らかなトレンドと急激なピーク両方に対応させる。

### 非ゼロ・ゼロパターン
- `recent_nonzero_ratio_{7,14,28}_f`, `recent_zero_share_28_f`: 指定期間内で出荷ゼロの頻度。間欠需要の強さを表し、需要発生確率を推定するのに有効。
- `recent_nonzero_run_length_{7,14}_f` / `zero_run_length_{7,14}_f`: 連続して非ゼロ (またはゼロ) が続いた長さ。直近の在庫切れ・販売停止状態の継続を捕捉し、ゼロが続いた後のリバウンドや継続停止をモデル化する。
- `days_since_last_obs_f`, `days_since_last_nonzero_f`, `gap_business_days_f`: 最終観測日や非ゼロからの経過日数、営業日ベースのギャップ。長期欠品やデータ欠落を特徴として扱い、再開タイミングの予測補助に活用する。

狙い: 出荷が途切れる「販売間隔」の長さやゼロ発生確率をモデルへ渡し、間欠需要の発生／非発生を識別しやすくする。

### 指数平滑・トレンド
- `ewm_mean_{7,14,30}_f`: 指数平滑移動平均。直近ほど重みを置いた水準で、最新トレンドを滑らかに反映する。
- `cumulative_mean_f` / `cumulative_std_f`: 過去全体の平均と標準偏差。長期ベースラインと全体変動幅を提供。
- `trend_{7,14}_ratio_f`: 直近値を7/14日前と比較した比率。短期トレンドの上昇・下降をシンプルに表現。
- `trend_28_slope_f`: 過去28日の線形傾き。より滑らかな傾向把握。
- `short_long_mean_gap_f`: 7日平均と28日平均の比率。短期と月次水準の乖離を示し、需要急変を検出する。
- `month_over_month_ratio_f`: 当月と前月平均の比。月次モメンタムを直接数値化。

狙い: 滑らかな平滑値と傾向指標を組み合わせて、直近のトレンド変化を過去水準と比較しながらモデルへ供給する。

### 季節性・ベースライン比較
- `seasonal_month_mean/std_f`, `seasonal_week_mean/std_f`: 過去学習期間から得た月別・週番号別の代表値/分散。季節要因を事前に埋め込み、同月・同週での平均出荷を提供。
- `seasonal_week_gap_f`: 直近7日平均を同週平均と比較した比率。季節ベースラインからの乖離を測定。
- `recent_actual_to_seasonal_ratio_14_f`: 直近14日の実績平均 ÷ 月次ベースライン。季節平均に対する現在の超過/不足を把握。
- `recent_actual_vs_weekday_mean_f`: 直近実績を曜日別基準平均と比較。曜日特性との差異を捉える。
- `recent_actual_cumsum_28_f`, `recent_peak_actual_f`: 直近28日の累積や最大値。需要量のボリュームインパクトを表現。

狙い: 季節基準と現状のズレを数値化し、需要が季節的に高まっているのか、期待値以下なのかをモデルが判別できるようにする。

### 曜日・週末の特性
- `weekend_zero_flag_f`, `weekend_nonzero_rate_f`, `weekend_support_count_f`: 過去4週間以内の週末実績から、週末はゼロが多いか・出荷がどの程度発生するかを評価。週末需要の有無を明示する。
- `dow_nonzero_rate_f_{0-6}`, `weekday_zero_share_f_{0-6}`: 曜日ごとの非ゼロ率・ゼロ率。曜日特有の稼働状況をモデルに学習させる。
- `weekday_level_diff_f_{0-6}`: 曜日別の直近平均を累積平均と比較した比率。曜日ごとの水準変化を確認。
- `weekend_support_count_f` を閾値で評価し、サンプル不足の週末を除外する仕組みも備える。

狙い: 週末稼働/停止や曜日ごとの偏りを明示的な確率として与え、曜日ダミーよりも豊富な情報をモデルに伝える。

### 高頻度SKU向け補正
- `high_frequency_flag_f`: ボリュームが大きく直近28日で非ゼロ率80%以上のSKUを識別。
- `high_freq_zero_penalty_f`: 上記フラグが立つSKUで直近7日ゼロが続いた長さを掛けた値。通常はゼロが出にくいSKUでゼロが続いた場合にペナルティを与え、異常な欠品を強調する。

狙い: 通常は常時出荷される商品が突然ゼロになった場合にモデルへ警告を送ることで、サプライ問題による落ち込みを迅速に捉える。

3. カレンダ特徴量 (CALENDAR_FEATURES)
-------------------------------------
- `dow` / `is_weekend`: 曜日インデックスと週末フラグ。
- `is_business_day_f`: 土日祝を除いた営業日判定 (jpholiday を利用)。
- `month` / `quarter` / `day_of_month` / `iso_week`: 月・四半期・月内の日付・ISO週番号。
- `is_month_start` / `is_month_end`: 月初1週以内・月末1週以内のフラグ。月跨ぎで需要が変動するパターンに対応。
- `days_to_next_holiday_f` / `days_from_prev_holiday_f`: 直前/直後の休日日からの距離。連休前後の需要増減を把握。
- `is_payday_window_f`: 月末±2営業日内かどうか。支払日周辺の需要を意識。
- `fiscal_period_f`: 3・6・9・12月 (四半期末) フラグ。決算期の特需/調整を反映。

狙い: カレンダイベントに伴う周期的な需要変化をモデルに伝える。曜日と祝日近傍の変動、月末処理や決算期の需要波動を拾う。

まとめ
------
当スクリプトは、静的統計で商品固有の水準を押さえつつ、状態依存の移動統計やゼロ出現パターンで間欠需要を詳細にモデリングし、さらにカレンダ要因で季節性・曜日性を補正する構成になっている。これらの特徴量を同時に投入することで、短期的な自己相関・長期トレンド・季節要因・欠品兆候をバランス良く捉え、需要予測モデルの精度と頑健性を高める意図がある。***
